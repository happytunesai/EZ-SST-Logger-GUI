{
    "language_name": "Français",
    "language_code": "fr",
    "app_title": "EZ STT Logger GUI v.{version}",
    "tab_local": "Local",
    "tab_openai": "API OpenAI",
    "tab_elevenlabs": "API ElevenLabs",
    "tab_websocket": "WebSocket",
    "tab_integration": "Intégration (SB)",
    "label_model_whisper": "Modèle Whisper :",
    "label_api_key_openai": "Clé API OpenAI :",
    "placeholder_api_key_openai": "sk-...",
    "label_api_key_elevenlabs": "Clé API ElevenLabs :",
    "placeholder_api_key_elevenlabs": "Clé ElevenLabs...",
    "label_model_id_elevenlabs": "ID Modèle EL :",
    "placeholder_model_id_elevenlabs": "ex. scribe_v1",
    "checkbox_filter_parentheses": "Filtrer contenu (...)/[...]",
    "label_websocket_incoming": "Entrant (Contrôle WS) :",
    "checkbox_websocket_enable": "Activer Serveur WS",
    "label_websocket_port": "Port Serveur :",
    "label_websocket_port_info": "(Défaut: {port}, Restart requis)",
    "label_websocket_command_info": "Commande attendue: TOGGLE_RECORD",
    "label_integration_outgoing": "Sortant (Vers Streamer.bot) :",
    "checkbox_integration_enable": "Envoyer à Streamer.bot",
    "label_integration_url": "URL Streamer.bot :",
    "placeholder_integration_url": "ws://127.0.0.1:8080/",
    "label_integration_url_info": "(Restart requis)",
    "label_integration_prefix": "Texte Préfixe :",
    "label_mic": "Microphone :",
    "combobox_mic_loading": "Chargement...",
    "combobox_mic_nodata": "Aucun Micro !",
    "combobox_mic_error": "Erreur !",
    "button_mic_reload": "Recharger",
    "label_language_stt": "Langue (vide=Auto) :",
    "placeholder_language_stt": "ex. de, en, fr (ISO)",
    "label_format": "Format :",
    "radio_format_txt": "TXT",
    "radio_format_json": "JSON",
    "label_output_file": "Fichier Sortie :",
    "placeholder_output_file": "Défaut : {filename}",
    "button_browse": "Choisir...",
    "label_min_buffer": "Buffer Min (s) :",
    "label_silence_threshold": "Détec. Silence (s) :",
    "checkbox_clear_log": "Vider log au démarrage",
    "button_start_recording": "Démarrer Enreg.",
    "button_stop_recording": "Arrêter Enreg.",
    "button_stopping_recording": "Arrêt...",
    "button_edit_filter": "Éditer Filtres...",
    "button_edit_replacements": "Éditer Remplacem...",
    "button_clear_output": "Vider Affichage",
    "status_ready": "Prêt.",
    "status_ready_ws_disabled": "Prêt (Serveur WS désactivé).",
    "status_ready_sb_disabled": " (Envoi SB désactivé)",
    "status_mic_search": "Recherche micros...",
    "status_mic_selected": "Micro '{mic_name}' choisi.",
    "status_mic_invalid": "Sélection micro invalide.",
    "status_mics_loaded_selected": "Micros chargés. Micro choisi.",
    "status_mics_loaded_error": "Micros chargés, erreur choix.",
    "status_mics_error": "Erreur chargement micros !",
    "status_mics_none": "Aucun micro trouvé !",
    "status_output_file_selected": "Fichier sortie : {filename}",
    "status_opening_editor": "Ouverture '{filename}'...",
    "status_opened_editor": "'{filename}' ouvert.",
    "status_error_opening_file": "Erreur ouverture fichier : {error}",
    "status_error_file_not_found": "Erreur : Fichier '{filename}' introuvable.",
    "status_error_filter_not_found": "Erreur : Fichier filtre '{filename}' non créé/trouvé.",
    "status_error_replacements_not_found": "Erreur : Fichier remplacements non créé/trouvé.",
    "status_output_cleared": "Affichage vidé.",
    "status_error_clearing_output": "Erreur vidage affichage.",
    "status_starting_recording": "Démarrage enregistrement...",
    "status_stopping_recording": "Arrêt enregistrement...",
    "status_error_mic_select_fail": "Erreur : Choisir un micro valide !",
    "status_error_output_dir_create": "Erreur création dossier sortie : {error}",
    "status_error_output_dir_write": "Erreur : Pas d'accès écriture sortie.",
    "status_error_api_key_openai": "Erreur : Clé API OpenAI manque !",
    "status_error_api_key_elevenlabs": "Erreur : Clé API ElevenLabs manque !",
    "status_error_model_id_elevenlabs": "Erreur : ID Modèle EL manque !",
    "status_error_numeric_buffer": "Erreur : Nombre invalide buffer/silence.",
    "status_error_reading_settings": "Erreur lecture paramètres : {error}",
    "status_error_invalid_input": "Entrée invalide : {error}",
    "status_recording_finished": "Enregistrement terminé.",
    "status_worker_unexpected_end": "Worker terminé imprévu.",
    "status_error_unexpected_worker": "Erreur worker imprévue !",
    "status_error_portaudio": "Erreur Flux Audio !",
    "status_error_portaudio_details": "Erreur PortAudio : {error}. Enreg. arrêté.",
    "status_error_saving_config": "Erreur sauvegarde config : {error}",
    "status_error_saving_replacements": "Erreur sauvegarde remplac. '{text}...'.",
    "status_error_saving_filter": "Erreur sauvegarde filtre : {error}",
    "status_error_key_unwritable": "Fichier clé non modifiable: {error}. Clé API non sûre !",
    "status_error_saving_key": "Erreur sauvegarde clé: {e}. Clé API non sûre !",
    "status_filter_added": "Ajouté '{text}...' à filtre ({filename}).",
    "status_replacement_added": "Remplacement '{text}...' sauvé.",
    "status_replacement_exists": "Info : Remplacement '{text}...' existe déjà.",
    "status_no_selection": "Pas de sélection.",
    "status_empty_selection": "Sélection vide ignorée.",
    "status_selection_copied": "Sélection copiée.",
    "status_all_copied": "Tout copié.",
    "status_error_copy": "Erreur copie texte.",
    "status_ws_server_starting": "Démarrage Serveur WS port {port}...",
    "status_ws_server_running": "Serveur WS actif port {port}",
    "status_ws_server_stopped": "Serveur WS arrêté.",
    "status_sb_client_starting": "Démarrage Client SB pour {url}...",
    "status_sb_client_connected": "Connecté à Streamer.bot",
    "status_sb_client_waiting": "Attente Streamer.bot...",
    "status_sb_client_stopped": "Client SB arrêté.",
    "status_sb_warn_disconnected": "Connexion SB fermée.",
    "status_sb_warn_refused": "Connexion WS SB refusée.",
    "status_sb_warn_timeout": "Timeout WS SB.",
    "status_sb_warn_send_error": "Erreur envoi SB : {error}",
    "status_sb_warn_queue_full": "Queue SB pleine !",
    "status_error_ws_port_invalid": "Port WS invalide : {port}",
    "status_error_sb_url_invalid": "URL SB invalide : {url}",
    "status_error_ws_lib_missing": "Lib WebSocket manque !",
    "status_error_ws_port_busy": "Port WS {port} occupé !",
    "status_error_ws_other": "Erreur Port WS {port} : {error}",
    "status_error_ws_server_task": "Erreur Serveur WS : {error}",
    "status_error_sb_client_task": "Erreur Client WS SB : {error}",
    "status_closing": "Arrêt enregistrement avant fermeture...",
    "dialog_select_output_file": "Choisir Fichier Sortie",
    "dialog_file_type_txt": "Fichier TXT",
    "dialog_file_type_json": "Fichier JSON",
    "dialog_file_type_all": "Tous Fichiers",
    "context_copy": "Copier",
    "context_copy_all": "Tout Copier",
    "context_add_filter": "Ajouter au Filtre",
    "context_add_replacement": "Ajouter Remplacement 'Botname'",
    "context_clear_output": "Vider Affichage",
    "label_language_ui": "Langue:",
    "label_log_level": "Niveau Log:",
    "log_level_debug": "Debug",
    "log_level_info": "Info",
    "log_level_warning": "Avert.",
    "log_level_error": "Erreur",
    "log_level_critical": "Critique",
    "status_log_level_set": "Niveau log console : {log_level}",
    "status_error_generic": "Erreur : {error}",
    "log_created_directory": "Dossier '{path}' créé ou existe.",
    "log_failed_directory": "ERREUR: Création dossier '{path}' impossible: {error}",
    "log_key_missing": "ERREUR CRITIQUE: Échec chargement/génération clé chiffrement.",
    "log_logfile_cleared": "Fichier log '{path}' vidé (config).",
    "log_logfile_clear_error": "Erreur vidage log '{path}': {error}",
    "log_logfile_clear_unexpected": "Erreur imprévue vidage log '{path}'",
    "log_logfile_not_found": "Fichier log '{path}' non trouvé pour vidage.",
    "log_logfile_no_handler": "Impossible vider log: Handler fichier non trouvé.",
    "log_app_started": "Démarrage WhisperGUI...",
    "log_app_ended": "Boucle GUI terminée.",
    "log_gui_exception": "Erreur critique boucle principale.",
    "log_app_exiting": "Fin exécution main.py.",
    "log_lang_loading": "Chargement fichier langue: {path}",
    "log_lang_loaded": "Langue '{code}' chargée.",
    "log_lang_default_loaded": "Langue défaut '{code}' chargée.",
    "log_lang_not_supported": "Code langue '{code}' non supporté. Défaut '{fallback}'.",
    "log_lang_file_missing": "Fichier langue '{path}' non trouvé.",
    "log_lang_default_missing": "Fichier langue défaut '{path}' non trouvé! Textes UI manquants?",
    "log_lang_parse_error": "Erreur chargement/parse langue '{path}': {error}",
    "log_lang_key_not_string": "Valeur clé '{key}' (langue '{code}') n'est pas string: {text}",
    "log_lang_format_missing": "Placeholder '{e}' manquant pour clé '{key}' (langue: {code}).",
    "log_lang_format_error": "Erreur formatage clé '{key}': {error}. Original: '{text}'",
    "log_logfile_created": "Fichier log: {path}",
    "log_console_level_initialized": "Niveau log console initial: {level}",
    "log_file_logging_disabled": "Log fichier désactivé (erreur).",
    "log_logfile_open_error": "ERREUR: Ouverture log '{path}' impossible: {error}",
    "log_console_handler_error": "ERREUR: Création handler console impossible: {error}",
    "log_config_loading": "Chargement config depuis '{path}'...",
    "log_config_file_not_found": "Fichier config non trouvé: {path}",
    "log_config_openai_decrypted": "Clé API OpenAI déchiffrée.",
    "log_config_openai_decrypt_failed": "Déchiffrement clé OpenAI échoué.",
    "log_config_openai_decrypt_error": "Erreur déchiffrement clé OpenAI: {error}",
    "log_config_openai_key_found_but_no_decryption": "Clé OpenAI trouvée, mais pas clé déchiffrement.",
    "log_config_elevenlabs_decrypted": "Clé API ElevenLabs déchiffrée.",
    "log_config_elevenlabs_decrypt_failed": "Déchiffrement clé EL échoué.",
    "log_config_elevenlabs_decrypt_error": "Erreur déchiffrement clé EL: {error}",
    "log_config_elevenlabs_key_found_but_no_decryption": "Clé EL trouvée, mais pas clé déchiffrement.",
    "log_config_loaded": "Config chargée et traitée.",
    "log_config_fallback_defaults": "Fichier config '{path}' non trouvé. Défauts utilisés.",
    "log_config_parse_error": "Erreur lecture/parse config '{path}': {error}. Défauts utilisés.",
    "log_config_unexpected_error": "Erreur imprévue chargement config. Défauts utilisés.",
    "log_config_invalid_language": "Code langue invalide '{value}' (config). Défaut '{fallback}'.",
    "log_config_invalid_log_level": "Niveau log invalide '{value}' (config). Défaut '{fallback}'.",
    "log_config_saving": "Sauvegarde config vers '{path}'...",
    "log_config_openai_encrypted": "Clé API OpenAI chiffrée pour sauvegarde.",
    "log_config_openai_encrypt_failed": "Chiffrement clé OpenAI échoué. NON sauvée.",
    "log_config_openai_no_key": "Clé OpenAI présente mais pas clé chiffr. NON sauvée.",
    "log_config_elevenlabs_encrypted": "Clé API EL chiffrée pour sauvegarde.",
    "log_config_elevenlabs_encrypt_failed": "Chiffrement clé EL échoué. NON sauvée.",
    "log_config_elevenlabs_no_key": "Clé EL présente mais pas clé chiffr. NON sauvée.",
    "log_config_invalid_log_level_save": "Tentative sauvegarde niveau log invalide '{value}'. Défaut '{fallback}'.",
    "log_config_save_conversion_error": "Erreur conversion valeurs num. (sauvegarde): {error}.",
    "log_config_saved": "Config sauvegardée.",
    "log_config_save_error": "ERREUR sauvegarde config vers '{path}': {error}",
    "log_config_save_unexpected": "Erreur imprévue sauvegarde config.",
    "log_utils_crypto_missing": "Lib chiffrement non chargée. Opés clés impossibles.",
    "log_utils_crypto_missing_short": "Crypto manque !",
    "log_utils_key_loaded": "Clé chiffrement chargée: '{path}'.",
    "log_utils_key_invalid": "Contenu '{path}' invalide. Nouvelle clé générée.",
    "log_utils_key_read_error": "Erreur lecture clé '{path}': {error}",
    "log_utils_key_generating": "Génération nouvelle clé chiffrement...",
    "log_utils_key_saved": "Nouvelle clé sauvée: '{path}'.",
    "log_utils_key_important_notice": "!! IMPORTANT: Gardez '{path}' en sécurité !!\n   Sans lui, clé API non déchiffrable.\n   NE PAS commiter sur Git.",
    "log_utils_key_write_error": "Sauvegarde clé '{path}' échouée: {error}",
    "log_utils_key_write_error_short": "Fichier clé non modifiable: {error}. Sécu clé API compromise !",
    "log_utils_encrypt_failed_crypto": "Chiffrement échoué: Crypto manque.",
    "log_utils_encrypt_skipped": "Chiffrement sauté: Pas clé/données.",
    "log_utils_encrypt_error": "Erreur chiffrement: {error}",
    "log_utils_decrypt_failed_crypto": "Déchiffrement échoué: Crypto manque.",
    "log_utils_decrypt_skipped": "Déchiffrement sauté: Pas clé/données.",
    "log_utils_decrypt_invalid_token": "Déchiffrement échoué: Token invalide.",
    "log_utils_decrypt_error": "Erreur déchiffrement: {error}",
    "log_utils_sounddevice_missing": "Lib Sounddevice non chargée. Liste périph. audio impossible.",
    "log_utils_searching_devices": "Recherche périph. audio...",
    "log_utils_audio_query_failed": "ERREUR query périph. audio",
    "log_utils_audio_query_error": "Erreur accès périph. audio: {error}",
    "log_utils_default_device_found": "Périph. entrée défaut: Index {index} - {name}",
    "log_utils_no_default_device": "Aucun périph. entrée défaut explicite.",
    "log_utils_default_device_error": "Détermination périph. défaut impossible: {error}",
    "log_utils_device_count": "Nb total périph. trouvés: {count}",
    "log_utils_skipping_mme": "Périph. {index} ({name}) use MME - sauté.",
    "log_utils_invalid_hostapi_info": "Périph. {index} ({name}) sans info Host API valide.",
    "log_utils_hostapi_check_failed": "Vérif Host API échouée périph. {index}: {error}",
    "log_utils_valid_device": "  -> Périph. entrée valide: {name}",
    "log_utils_skipped_device": "  -> Périph. entrée sauté (Host API): ID {index}: {name}",
    "log_utils_valid_input_count": "Nb périph. entrée valides: {count}",
    "log_utils_no_input_devices": "Aucun micro approprié trouvé.",
    "log_ws_client_connected": "Client WS connecté: {addr}",
    "log_ws_message_received": "Msg reçu de {addr}: {msg}",
    "log_ws_command_toggle": "Cmd WS: TOGGLE_RECORD détecté -> GUI.",
    "log_ws_command_unknown": "Cmd inconnue '{cmd}' de {addr}.",
    "log_ws_error_unknown_command": "ERREUR: Cmd inconnue '{cmd}'.",
    "log_ws_non_text_message": "Msg non-texte reçu de {addr}. Texte seul supporté.",
    "log_ws_error_only_text": "ERREUR: Seuls msgs texte supportés.",
    "log_ws_client_disconnected_ok": "Client {addr} déconnecté normalement.",
    "log_ws_client_disconnected_error": "Client {addr} déconnecté (erreur): {error}",
    "log_ws_handler_exception": "Erreur imprévue handler WS ({addr})",
    "log_ws_connection_closed": "Connexion WS fermée: {addr}",
    "log_ws_lib_missing": "Lib WS non dispo. Serveur non démarré.",
    "log_ws_server_started": "Serveur WS démarré sur {host}:{port}",
    "log_ws_server_stopping": "Arrêt serveur WS...",
    "log_ws_port_in_use": "Port WS {port} déjà utilisé !",
    "log_ws_port_error": "Erreur démarrage serveur WS port {port}: {error}",
    "log_ws_server_exception": "Erreur imprévue serveur WS.",
    "log_ws_server_closed": "Connexion serveur WS fermée.",
    "log_ws_server_task_ended": "Tâche serveur WS terminée.",
    "log_ws_invalid_port": "Port WS invalide: {port}",
    "log_ws_loop_exception": "Exception boucle serveur WS.",
    "log_ws_loop_cleanup": "Nettoyage boucle WS...",
    "log_ws_loop_already_shutdown": "Boucle déjà arrêtée.",
    "log_ws_loop_runtime_error": "Erreur runtime annulation tâche: {error}",
    "log_ws_loop_cancel_error": "Erreur annulation tâches: {error}",
    "log_ws_loop_closed": "Boucle WS fermée.",
    "log_ws_loop_already_closed": "Boucle WS déjà fermée.",
    "log_ws_thread_done": "Thread serveur WS terminé.",
    "log_ws_thread_starting": "Démarrage thread serveur WS port {port}...",
    "log_sb_lib_missing": "Lib WS non dispo. Client SB non démarré.",
    "log_sb_connecting": "Connexion Streamer.bot: {url}",
    "log_sb_connected": "Connecté à Streamer.bot WS: {url}",
    "log_sb_ping_failed": "Échec vérif connexion SB.",
    "log_sb_ping_error": "Erreur ping SB: {error}",
    "log_sb_message_sent": "Msg envoyé à SB: {msg_preview}...",
    "log_sb_send_closed": "WS SB fermé pendant envoi.",
    "log_sb_send_failed": "Msg non envoyé: {msg_preview}...",
    "log_sb_send_error": "Erreur envoi SB: {error}",
    "log_sb_invalid_url": "URL WS SB invalide: {url}",
    "log_sb_connection_closed": "Connexion WS SB fermée/reset: {error}",
    "log_sb_connection_refused": "Connexion WS SB refusée: {url}",
    "log_sb_connection_timeout": "Timeout (>10s) connexion SB: {url}",
    "log_sb_unexpected_exception": "Erreur imprévue client WS SB",
    "log_sb_connection_closed_explicit": "Connexion WS SB fermée explicitement.",
    "log_sb_connection_close_error": "Erreur fermeture connexion SB: {error}",
    "log_sb_retry_delay": "Attente {seconds}s avant relance connexion SB...",
    "log_sb_cancelled": "Attente client SB annulée.",
    "log_sb_task_ended": "Tâche client WS SB terminée.",
    "log_sb_loop_exception": "Erreur exécution boucle client SB (thread)",
    "log_sb_loop_cleanup": "Fin boucle client SB. Nettoyage...",
    "log_sb_loop_already_shutdown": "Boucle SB déjà arrêtée.",
    "log_sb_loop_runtime_error": "Erreur runtime nettoyage tâches asyncio (client SB): {error}",
    "log_sb_loop_cancel_error": "Erreur nettoyage tâches asyncio (client SB): {error}",
    "log_sb_loop_closed": "Boucle événements client SB fermée.",
    "log_sb_loop_already_closed": "Boucle événements client SB déjà fermée.",
    "log_sb_thread_done": "Thread client SB terminé.",
    "log_sb_thread_starting": "Démarrage thread client SB pour URL: {url}...",
    "log_tp_filter_file_not_found": "Fichier filtre '{filter_path}' non trouvé. Création...",
    "log_tp_filter_default_created": "Fichier filtre défaut '{filter_path}' créé.",
    "log_tp_filter_empty_created": "Fichier filtre vide '{filter_path}' créé.",
    "log_tp_filter_create_error": "Création filtre '{filter_path}' échouée: {error}",
    "log_tp_filter_invalid_regex": "Regex défaut invalide '{pattern}': {error}",
    "log_tp_filter_loading": "Chargement filtres depuis '{filter_path}'...",
    "log_tp_filter_invalid_line": "Regex invalide '{filter_path}' L{line}: '{pattern}' - {error}. Ignoré.",
    "log_tp_filter_loaded": "{count} filtres chargés depuis '{filename}'.",
    "log_tp_filter_read_error": "Lecture filtre '{filter_path}' échouée: {error}. Pas de filtres actifs.",
    "log_tp_filter_load_unexpected": "Erreur imprévue chargement filtre '{filter_path}'",
    "log_tp_filter_applied": "Résultat filtre: '{result}'",
    "log_tp_replacements_file_not_found": "Fichier remplacem. '{filename}' non trouvé. Création...",
    "log_tp_replacements_created": "Fichier remplacem. exemple '{filename}' créé.",
    "log_tp_replacements_create_error": "Création remplacem. '{filename}' échouée: {error}",
    "log_tp_replacements_loading": "Chargement remplacem. depuis '{filename}'...",
    "log_tp_replacements_invalid_format": "Contenu '{filename}' n'est pas JSON valide (dict attendu).",
    "log_tp_replacements_loaded": "{count} règles remplacem. chargées depuis '{filename}'.",
    "log_tp_replacements_read_error": "Lecture/parse remplacem. '{filename}' échouée: {error}. Pas de remplacem.",
    "log_tp_replacements_load_unexpected": "Erreur imprévue chargement remplacem. '{filename}'",
    "log_tp_replacements_saving": "Sauvegarde remplacem. vers '{filename}'...",
    "log_tp_replacements_save_error": "Écriture remplacem. '{filename}' échouée: {error}",
    "log_tp_replacements_save_unexpected": "Erreur imprévue sauvegarde remplacem.",
    "log_tp_replacements_applied": "Remplacem. appliqués. Résultat: '{result}'",
    "log_tp_replacements_rule_error": "Erreur application remplacem. regex '{pattern}' -> '{replacement}': {error}",
    "log_tp_replacements_unexpected_error": "Erreur imprévue remplacem. '{pattern}' -> '{replacement}': {error}",
    "log_tp_replacements_saved": "{count} règles remplacem. sauvées dans '{filename}'.",
    "log_tp_replacements_merge_error": "Fichier existant '{filename}' invalide. Sera écrasé.",
    "log_ap_audio_callback_status": "Statut Callback Audio: {status}",
    "log_ap_libs_missing": "Sounddevice/Soundfile manque. Enreg. impossible.",
    "log_ap_whisper_missing": "Erreur: Lib Whisper manque.",
    "log_ap_whisper_local_unavailable": "Mode Local non dispo. Installer 'openai-whisper'.",
    "log_ap_openai_missing": "Erreur: Lib OpenAI manque.",
    "log_ap_openai_unavailable": "Mode OpenAI non dispo. Installer 'openai'.",
    "log_ap_openai_key_missing": "Erreur: Clé API OpenAI manque.",
    "log_ap_openai_key_invalid": "Clé API OpenAI non fournie/chargée.",
    "log_ap_elevenlabs_missing": "Erreur: Lib ElevenLabs manque.",
    "log_ap_elevenlabs_unavailable": "Lib ElevenLabs non installée (pip install elevenlabs).",
    "log_ap_elevenlabs_key_missing": "Erreur: Clé API EL manque.",
    "log_ap_elevenlabs_key_invalid": "Clé API EL non fournie/chargée.",
    "log_ap_loading_model": "Chargement modèle Whisper local '{model_name}'...",
    "log_ap_model_loaded": "Modèle local '{model_name}' chargé.",
    "log_ap_model_load_error": "Erreur chargement modèle Whisper local {model_name}",
    "log_ap_model_load_error_details": "Erreur chargement modèle: {error}\\nVérif exist./mémoire/FFmpeg!",
    "log_ap_model_already_loaded": "Modèle local '{model_name}' déjà chargé.",
    "log_ap_using_loaded_model": "Utilisation modèle local '{model_name}' déjà chargé.",
    "log_ap_initializing_openai": "Initialisation Client API OpenAI...",
    "log_ap_openai_ready": "Client API OpenAI prêt.",
    "log_ap_openai_initialized": "Client API OpenAI initialisé.",
    "log_ap_openai_auth_error": "Erreur auth OpenAI. Clé API invalide?",
    "log_ap_openai_key_invalid_status": "Erreur: Clé API OpenAI invalide!",
    "log_ap_openai_key_expired": "Clé API OpenAI invalide/expirée.",
    "log_ap_openai_init_error": "Erreur init Client API OpenAI",
    "log_ap_openai_init_error_status": "Erreur Init API OpenAI!",
    "log_ap_openai_init_error_details": "Erreur Init OpenAI: {error}\\nVérif Clé/Internet.",
    "log_ap_initializing_elevenlabs": "Initialisation Client API EL...",
    "log_ap_elevenlabs_ready": "Client API EL prêt.",
    "log_ap_elevenlabs_initialized": "Client API EL initialisé.",
    "log_ap_elevenlabs_api_error": "Erreur API EL (init): {error}",
    "log_ap_elevenlabs_api_error_status": "Erreur: Erreur API EL ({code})!",
    "log_ap_elevenlabs_error_details": "Erreur API EL: {error}\\nVérif Clé/Statut Compte.",
    "log_ap_elevenlabs_init_error": "Erreur init Client API EL",
    "log_ap_elevenlabs_init_error_status": "Erreur Init API EL!",
    "log_ap_elevenlabs_init_error_details": "Erreur Init EL: {error}\\nVérif Clé/Internet.",
    "log_ap_unknown_mode": "Mode traitement inconnu: {mode}",
    "log_ap_unknown_mode_status": "Erreur: Mode inconnu '{mode}'",
    "log_ap_local_transcription_start": "Début transcr. locale (Long: {length}s, Opt: {options})",
    "log_ap_local_transcription_result": "Résultat transcr. locale: '{text}'",
    "log_ap_openai_transcription_start": "Envoi API OpenAI (Mod: {model}, Lang: {language}, Prompt: {has_prompt}, Long: {length}s)",
    "log_ap_openai_transcription_result": "Réponse API OpenAI: '{text}'",
    "log_ap_elevenlabs_transcription_start": "Envoi API EL (Mod: {model}, Long: {length}s)",
    "log_ap_elevenlabs_unexpected_response": "Réponse imprévue EL STT: {response}",
    "log_ap_elevenlabs_transcription_result": "Réponse API EL: '{text}'",
    "log_ap_openai_api_error": "Erreur API OpenAI: {error}",
    "log_ap_openai_api_error_status": "Erreur API OpenAI Seg!",
    "log_ap_openai_auth_error_during_transcription": "Erreur auth OpenAI (transcr.).",
    "log_ap_openai_auth_error_status": "Erreur Auth OpenAI Seg!",
    "log_ap_elevenlabs_api_error_transcription": "Erreur API EL: {error}",
    "log_ap_portaudio_error": "Erreur PortAudio (transcr.)",
    "log_ap_audio_error_status": "Erreur Audio Seg!",
    "log_ap_runtime_error": "Erreur runtime (transcr.): {error}",
    "log_ap_runtime_error_status": "Erreur Runtime Seg! ({error})",
    "log_ap_transcription_error": "Erreur transcr. générique mode {mode}",
    "log_ap_transcription_error_status": "{api_name} Erreur Transcr. Seg!",
    "log_ap_worker_start": "Début worker enreg. Mode: {mode}, Périph: {device}, Mod: {model}",
    "log_ap_client_init_failed": "Échec init client STT. Fin worker.",
    "log_ap_using_openai_prompt": "Usage prompt API OpenAI: '{prompt}'",
    "log_ap_open_audio_stream": "Ouverture flux audio périph {device_id}...",
    "log_ap_audio_stream_configured": "Flux audio config: Rate={rate}, Chan={channels}, Block={blocksize}",
    "log_ap_audio_stream_started": "Flux audio démarré. Attente données...",
    "log_ap_recording_running": "Enregistrement ({mode}) - Parlez.",
    "log_ap_speech_detected": "Parole détectée.",
    "log_ap_silence_detected": "Silence détecté ({seconds}s).",
    "log_ap_processing_segment": "Traitement segment {segment_id} ({mode})...",
    "log_ap_segment_length": "Traitement segment {segment_id} (Long: {length}s)",
    "log_ap_segment_finished": "Segment {segment_id} fini ({mode}). Attente parole.",
    "log_ap_segment_result": "Résultat seg {segment_id} (filtré): '{text}'",
    "log_ap_processing_remainder": "Traitement reste {segment_id} post-silence ({mode})...",
    "log_ap_processing_remainder_length": "Traitement reste {segment_id} (Long: {length}s)",
    "log_ap_remainder_finished": "Segment {segment_id} (reste) fini ({mode}). Attente parole.",
    "log_ap_remainder_result": "Résultat seg {segment_id} (reste): '{text}'",
    "log_ap_file_write_error": "Erreur écriture sortie '{filename}': {error}",
    "log_ap_file_write_error_remainder": "Erreur écriture (reste) '{filename}': {error}",
    "log_ap_file_unexpected_error": "Erreur imprévue écriture fichier '{filename}'",
    "log_ap_file_unexpected_error_remainder": "Erreur fichier imprévue (reste) '{filename}'",
    "log_ap_sb_message_sent": "Msg envoyé queue SB: {message}",
    "log_ap_sb_message_sent_remainder": "Msg (reste) queue SB: {message}",
    "log_ap_sb_queue_full": "Queue SB pleine. Msg rejeté.",
    "log_ap_sb_queue_full_remainder": "Queue SB (reste) pleine.",
    "log_ap_sb_queue_error": "Erreur ajout queue SB: {error}",
    "log_ap_sb_queue_error_remainder": "Erreur ajout queue SB (reste): {error}",
    "log_ap_portaudio_stream_error": "Erreur PortAudio flux audio",
    "log_ap_worker_unexpected_error": "Erreur imprévue thread worker enreg.",
    "log_ap_worker_ending": "Fin worker enreg.",
    "log_ap_stream_stopped": "Flux audio arrêté et fermé.",
    "log_ap_stream_close_error": "Erreur fermeture flux audio: {error}",
    "log_ap_audio_queue_cleared": "Queue audio vidée.",
    "log_ap_worker_thread_ended": "Thread worker enreg. terminé. Statut: {status}",
    "log_gui_tab_mapping_created": "Map Nom Onglet -> Mode initiale créée: {mapping}",
    "log_gui_setup_window": "Configuration fenêtre principale...",
    "log_gui_icon_not_found": "Icône '{icon_file}' non trouvée.",
    "log_gui_icon_error": "Erreur déf. icône: {error}",
    "log_gui_window_setup_complete": "Config fenêtre principale OK.",
    "log_gui_creating_widgets": "Création widgets...",
    "log_gui_widgets_created": "Widgets créés.",
    "log_gui_initial_tab_set": "Onglet initial: {tab_name}",
    "log_gui_initial_tab_error": "Impossible déf. onglet initial '{tab_name}': {error}. Fallback.",
    "log_gui_fallback_tab_error": "Échec déf. onglet fallback: {error}",
    "log_gui_loading_initial_data": "Chargement données GUI initiales...",
    "log_gui_initial_data_loaded": "Données GUI initiales chargées.",
    "log_gui_no_output_path": "Chemin sortie non trouvé (config), défaut: {default_path}",
    "log_gui_starting_background_tasks": "Démarrage tâches arrière-plan...",
    "log_gui_language_change_requested": "Changement langue demandé: {language}",
    "log_gui_language_changing": "Changement langue vers: {code} ({name})",
    "log_gui_language_code_not_found": "Code langue non trouvé pour '{language}'.",
    "log_gui_language_not_found": "Langue sauvée '{language}' non trouvée. Fallback défaut.",
    "log_gui_log_level_change_requested": "Changement niveau log: {level}",
    "log_gui_log_level_set": "Niveau log console: {level_str} ({level_name}).",
    "log_gui_log_level_set_error": "Erreur déf. niveau log console: {error}",
    "log_gui_console_handler_missing": "Handler console non trouvé, niveau log inchangé.",
    "log_gui_invalid_log_level": "Niveau log invalide trouvé: {level}",
    "log_gui_log_level_str_not_found": "String niveau log non trouvé pour '{level}'.",
    "log_gui_log_level_not_found": "Niveau log sauvé '{level}' -> '{display}' non trouvé. Fallback.",
    "log_gui_websocket_checkbox_changed": "Checkbox Serveur WS changée: {state}",
    "log_gui_streamerbot_checkbox_changed": "Checkbox Client SB changée: {state}",
    "log_gui_updating_ui_texts": "MàJ textes UI...",
    "log_gui_tab_names_update_warning": "Noms onglets non màj après init.",
    "log_gui_ui_texts_updated": "Textes UI màj.",
    "log_gui_output_file_selected": "Fichier sortie choisi: {filepath}",
    "log_gui_opening_file": "Tentative ouverture '{filepath}' éditeur défaut...",
    "log_gui_file_not_found": "Fichier non trouvé (ouverture): {filepath}",
    "log_gui_os_error_opening_file": "Erreur OS ouverture '{filepath}': {error}",
    "log_gui_unknown_error_opening_file": "Erreur inconnue ouverture '{filepath}'",
    "log_gui_textbox_clear_error": "Erreur vidage textbox",
    "log_gui_copy_selection_error": "Erreur copie sélection: {error}",
    "log_gui_copy_all_error": "Erreur copie tout: {error}",
    "log_gui_filter_added_context": "Filtre ajouté (menu): '{text}' à {target_file}",
    "log_gui_filter_write_error": "Erreur écriture filtre '{target_file}': {error}",
    "log_gui_filter_add_error": "Erreur ajout filtre (menu)",
    "log_gui_replacement_added_context": "Nouveau remplacem. ajouté (menu): '{pattern}' -> '{replacement}'",
    "log_gui_mic_thread_error": "Erreur thread chargement micro",
    "log_gui_tkerror_check_button": "TclError dans _check_record_button_state (Arrêt?).",
    "log_gui_check_button_error": "Erreur imprévue _check_record_button_state: {error}",
    "log_gui_toggle_recording_called": "Appel toggle_recording. Statut: {status}",
    "log_gui_recording_active": "Enregistrement actif",
    "log_gui_recording_inactive": "Pas d'enregistrement",
    "log_gui_stopping_recording": "Arrêt enregistrement...",
    "log_gui_stop_requested": "Arrêt demandé.",
    "log_gui_starting_recording": "Démarrage enregistrement...",
    "log_gui_validating_start_conditions": "Validation conditions démarrage...",
    "log_gui_start_conditions_failed": "Conditions démarrage non remplies.",
    "log_gui_gathering_runtime_config": "Collecte config runtime...",
    "log_gui_config_gathering_failed": "Échec collecte config.",
    "log_gui_preparing_worker_args": "Préparation args worker...",
    "log_gui_worker_args_error": "Erreur args worker: {error}",
    "log_gui_clearing_stop_flag": "RAZ flag arrêt & màj GUI...",
    "log_gui_starting_worker_thread": "Démarrage thread worker (Mode: {mode})...",
    "log_gui_worker_thread_started": "Thread worker démarré.",
    "log_gui_output_dir_created": "Dossier sortie créé (Valider): {output_dir}",
    "log_gui_error_mic_id_not_found": "ID Micro non trouvé.",
    "log_gui_worker_preparation": "Prépa worker: output_file='{output_file}'",
    "log_gui_runtime_config_error": "Erreur collecte config runtime: {error}",
    "log_gui_external_toggle_command": "Cmd toggle externe reçue (queue GUI).",
    "log_gui_calling_toggle_recording": "Appel self.toggle_recording() depuis queue...",
    "log_gui_toggle_recording_call_finished": "Fin appel self.toggle_recording() (queue).",
    "log_gui_worker_finished": "Worker signale 'fini'.",
    "log_gui_unknown_message_type": "Type msg inconnu queue GUI: {type}",
    "log_gui_queue_processing_error": "Erreur boucle traitement queue GUI",
    "log_gui_status_label_update_error": "MàJ label statut échouée (fenêtre fermée?).",
    "log_gui_status": "Statut GUI: {message}",
    "log_gui_sending_ws_stop_signal": "Envoi signal Arrêt Serveur WS...",
    "log_gui_ws_stop_event_set_via_loop": "Événement Arrêt Serveur WS via loop.",
    "log_gui_ws_loop_not_found": "Boucle non trouvée/active pour Arrêt WS. Setting direct.",
    "log_gui_ws_stop_event_error": "Erreur setting Événement Arrêt WS: {error}",
    "log_gui_sending_sb_stop_signal": "Envoi signal Arrêt Client SB...",
    "log_gui_tab_mode_not_found": "Mode interne non trouvé pour onglet '{tab_name}'. Fallback 'local'.",
    "log_gui_closing_initiated": "Processus fermeture initié...",
    "log_gui_setting_stop_flag": "Setting stop_recording_flag...",
    "log_gui_waiting_for_recording_thread": "Attente fin thread enreg. (max 2s)...",
    "log_gui_recording_thread_timeout": "Thread enreg. non terminé après 2s.",
    "log_gui_recording_thread_terminated": "Thread enreg. terminé.",
    "log_gui_no_active_recording_thread": "Aucun thread enreg. actif trouvé.",
    "log_gui_stopping_background_threads": "Arrêt threads arrière-plan...",
    "log_gui_saving_final_config": "Sauvegarde config finale...",
    "log_gui_final_config_saved": "Config finale sauvée.",
    "log_gui_final_config_save_error": "Erreur sauvegarde config finale.",
    "log_gui_final_config_gather_error": "Collecte/sauvegarde config finale échouée.",
    "log_gui_waiting_before_destroy": "Attente brève...",
    "log_gui_destroying_window": "Destruction fenêtre Tkinter.",
    "log_gui_application_terminated": "Application terminée.",
    "log_gui_save_config_pre_rebuild": "Sauvegarde config avant màj UI (langue).",
    "log_gui_config_dir_ensured": "Dossier config assuré: {config_dir}",
    "log_gui_create_config_dir_failed": "Erreur création dossier config {config_dir}: {error}",
    "log_gui_config_saved_pre_rebuild": "Config sauvegardée avant màj langue.",
    "log_gui_config_save_error_pre_rebuild": "Erreur sauvegarde avant màj langue.",
    "log_gui_gather_config_failed_pre_rebuild": "Erreur collecte avant màj langue.",
    "status_error_config_dir_create": "Erreur création dossier config.",
    "log_gui_current_tab_pre_change": "Onglet actuel avant chgmt langue: '{name}', mode: '{mode}'",
    "log_gui_get_tab_failed_pre_change": "Impossible obtenir onglet actuel avant chgmt langue: {error}",
    "log_gui_tab_restored": "Onglet actif restauré: '{name}' (mode: '{mode}')",
    "log_gui_restore_tab_failed": "Impossible restaurer onglet '{mode}': {error}. Retour 1er onglet.",
    "log_gui_mem_config_updated": "Config mémoire (self.config) màj avec valeurs UI.",
    "log_info_pyinstaller_path": "Exécution via bundle PyInstaller, chemin base: {path}",
    "log_info_source_path": "Exécution depuis source, chemin base (info.py): {path}",
    "log_info_main_script_path": "Exécution depuis source (script principal), chemin base: {path}",
    "log_info_source_path_fallback": "Exécution depuis source (fallback info.py), chemin base: {path}, Erreur main: {error}",
    "log_info_link_opened": "Lien ouvert: {url}",
    "log_info_link_open_error": "Impossible ouvrir lien {url}: {error}",
    "log_info_label_update_error": "Erreur MàJ label statut release (thread): {error}",
    "log_info_release_check_start": "Vérif nouvelle release sur {url}",
    "log_info_release_versions": "Dernière release: {latest}, Actuelle: {current}",
    "log_info_packaging_missing": "Lib 'packaging' manquante, comparaison simple.",
    "log_info_version_parse_error": "Impossible comparer versions (packaging): {error}. Comparaison simple.",
    "log_info_release_newer": "Nouvelle release trouvée: {latest}",
    "log_info_release_latest": "App à jour. Version: {current}",
    "log_info_release_timeout": "Timeout vérif release GitHub ({url})",
    "log_info_release_request_error": "Erreur vérif release GitHub (Request): {error}",
    "log_info_release_unexpected_error": "Erreur imprévue vérif release GitHub: {error}",
    "tab_info": "Infos",
    "label_repo_link": "Dépôt Projet",
    "label_addon_link": "Addon PNGTuber",
    "button_check_release": "Vérifier MàJ",
    "status_checking_release": "Vérification MàJ...",
    "status_latest_release": "Version actuelle ({current_version}) à jour.",
    "status_new_release_available": "MàJ dispo: Version {latest_version} !",
    "status_release_check_error": "Erreur vérif MàJ: {error}",
    "error_timeout": "Timeout",
    "error_unknown": "Erreur inconnue",
    "error_opening_link": "Impossible ouvrir lien: {url}\nErreur: {error}",
    "log_gui_info_tab_created": "Contenu onglet Infos créé via info.create_info_tab.",
    "log_gui_info_tab_create_error": "Échec création contenu onglet Infos: {error}",
    "button_download_update": "Télécharger MàJ",
    "log_config_missing_key_save": "Clé '{key}' manquante dans config. Défaut '{fallback}' utilisé.",
    "label_replacement_botname": "Nom du Bot (Remplacements):",
    "status_enabled": "Activé",
    "status_disabled": "Désactivé"
}
