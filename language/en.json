{
  "app_title": "EZ STT Logger GUI v.{version}",
  "button_browse": "Browse...",
  "button_check_release": "Check for Updates",
  "button_clear_output": "Clear Display",
  "button_download_ffmpeg": "Download FFMPEG",
  "button_download_update": "Download Update",
  "button_edit_filter": "Edit Filters...",
  "button_edit_replacements": "Edit Replacements...",
  "button_mic_reload": "Reload",
  "button_start_recording": "Start Recording",
  "button_stop_recording": "Stop Recording",
  "button_stopping_recording": "Stopping...",
  "checkbox_clear_log": "Clear log file on start",
  "checkbox_filter_parentheses": "Filter content in (...) and [...]",
  "checkbox_integration_enable": "Send transcriptions to Streamer.bot",
  "checkbox_use_vad": "Use VAD Segmentation",
  "checkbox_websocket_enable": "Enable WebSocket Server",
  "combobox_mic_error": "Error!",
  "combobox_mic_loading": "Loading...",
  "combobox_mic_nodata": "No Microphones!",
  "context_add_filter": "Add to Filter List",
  "context_add_replacement": "Add as 'Botname' Replacement",
  "context_clear_output": "Clear Display",
  "context_copy": "Copy",
  "context_copy_all": "Copy All",
  "dialog_file_type_all": "All Files",
  "dialog_file_type_json": "JSON File",
  "dialog_file_type_txt": "TXT File",
  "dialog_select_output_file": "Select Output File",
  "error_opening_link": "Could not open link: {url}\nError: {error}",
  "error_timeout": "Timeout",
  "error_unknown": "Unknown error",
  "error_vad_init_failed_runtime": "VAD Processor: Runtime Error initializing Silero VAD Lite: {error}",
  "error_vad_sample_rate": "VAD Processor: Invalid sample rate {rate}. Only 8000 or 16000 supported.",
  "label_addon_link": "PNGTuber-GPT-WS",
  "label_api_key_elevenlabs": "ElevenLabs API Key:",
  "label_api_key_openai": "OpenAI API Key:",
  "label_api_model_openai": "OpenAI Model:",
  "label_appearance_mode": "üåì",
  "label_color_theme": "üé®",
  "label_ffmpeg_status_checking": "FFMPEG Status: Checking...",
  "label_ffmpeg_status_found": "FFMPEG Status: Found",
  "label_ffmpeg_status_not_found": "FFMPEG Status: Not Found!",
  "label_format": "Format:",
  "label_integration_outgoing": "Outgoing (Send to Streamer.bot):",
  "label_integration_prefix": "Prefix Text:",
  "label_integration_url": "Streamer.bot URL:",
  "label_integration_url_info": "(App restart required on change)",
  "label_language_stt": "Language (empty=Auto):",
  "label_language_ui": "üåê",
  "label_log_level": "üîç",
  "label_mic": "Microphone:",
  "label_min_buffer": "Min. Buffer (s):",
  "label_model_id_elevenlabs": "ElevenLabs Model ID:",
  "label_model_whisper": "Whisper Model:",
  "label_output_file": "Output File:",
  "label_replacement_botname": "Botname for Replacements:",
  "label_repo_link": "Project Repository",
  "label_silence_threshold": "Silence Detection (s):",
  "label_vad_min_silence": "VAD Min Silence (ms):",
  "label_vad_threshold": "VAD Threshold:",
  "label_websocket_command_info": "Expected command for recording toggle: TOGGLE_RECORD",
  "label_websocket_incoming": "Incoming (Control via WebSocket):",
  "label_websocket_port": "Server Port:",
  "label_websocket_port_info": "(Default: {port}, App restart required on change)",
  "language_code": "en",
  "language_name": "English",
  "log_am_import_fallback": "Appearance Manager: Using fallback settings due to import error.",
  "log_am_invalid_mode_config": "Appearance Manager: Invalid mode '{mode}' in config. Using default '{fallback}'.",
  "log_am_invalid_mode_select": "Appearance Manager: Invalid mode selected '{mode}'. Using default '{fallback}'.",
  "log_am_invalid_theme_config": "Appearance Manager: Invalid theme '{theme}' in config. Using default '{fallback}'.",
  "log_am_invalid_theme_select": "Appearance Manager: Invalid theme selected '{theme}'. Using default '{fallback}'.",
  "log_am_mode_change_failed_fallback": "Appearance Manager: Failed to set appearance mode, falling back to '{mode}'.",
  "log_am_mode_changed": "Appearance Manager: Appearance mode changed to '{mode}'.",
  "log_am_mode_set_error": "Appearance Manager: Error setting appearance mode to '{mode}': {error}",
  "log_am_mode_set_initial": "Appearance Manager: Initial appearance mode set to '{mode}'.",
  "log_am_theme_change_failed_fallback": "Appearance Manager: Failed to set color theme, falling back to '{theme}'.",
  "log_am_theme_changed": "Appearance Manager: Color theme changed to '{theme}'.",
  "log_am_theme_file_not_found": "Appearance Manager: Theme file not found at '{path}'.",
  "log_am_theme_restart_needed": "Appearance Manager: Application restart may be required for theme change to apply fully.",
  "log_am_theme_set_error": "Appearance Manager: Error setting color theme to '{theme}': {error}",
  "log_am_theme_set_initial": "Appearance Manager: Initial color theme set to '{theme}'.",
  "log_ap_audio_callback_status": "Audio Callback Status: {status}",
  "log_ap_audio_error_status": "Audio Error Seg!",
  "log_ap_audio_queue_cleared": "Audio queue cleared.",
  "log_ap_audio_stream_configured": "Audio Stream configured: Rate={rate}, Channels={channels}, Blocksize={blocksize}",
  "log_ap_audio_stream_started": "Audio Stream started. Waiting for audio data...",
  "log_ap_client_init_failed": "STT client initialization failed. Worker terminating.",
  "log_ap_elevenlabs_api_error": "ElevenLabs API Error during initialization: {error}",
  "log_ap_elevenlabs_api_error_status": "Error: ElevenLabs API Error ({code})!",
  "log_ap_elevenlabs_api_error_transcription": "ElevenLabs API Error: {error}",
  "log_ap_elevenlabs_error_details": "ElevenLabs API Error: {error}\\nCheck Key/Account Status.",
  "log_ap_elevenlabs_init_error": "Error initializing ElevenLabs API Client",
  "log_ap_elevenlabs_init_error_details": "ElevenLabs Init Error: {error}\\nCheck Key/Internet.",
  "log_ap_elevenlabs_init_error_status": "Error ElevenLabs API Initialization!",
  "log_ap_elevenlabs_initialized": "ElevenLabs API Client successfully initialized.",
  "log_ap_elevenlabs_key_invalid": "No ElevenLabs API key provided or loaded.",
  "log_ap_elevenlabs_key_missing": "Error: No ElevenLabs API Key.",
  "log_ap_elevenlabs_missing": "Error: ElevenLabs library missing.",
  "log_ap_elevenlabs_ready": "ElevenLabs API Client ready.",
  "log_ap_elevenlabs_transcription_result": "ElevenLabs API response: '{text}'",
  "log_ap_elevenlabs_transcription_start": "Sending to ElevenLabs API (Model: {model}, Length: {length}s)",
  "log_ap_elevenlabs_unavailable": "ElevenLabs library not installed (pip install elevenlabs).",
  "log_ap_elevenlabs_unexpected_response": "Unexpected response structure from ElevenLabs STT: {response}",
  "log_ap_file_unexpected_error": "Unexpected error writing file '{filename}'",
  "log_ap_file_unexpected_error_remainder": "Unexpected file error (remainder) '{filename}'",
  "log_ap_file_write_error": "Error writing to output file '{filename}': {error}",
  "log_ap_file_write_error_remainder": "Error writing (remainder) '{filename}': {error}",
  "log_ap_initializing_elevenlabs": "Initializing ElevenLabs API Client...",
  "log_ap_initializing_openai": "Initializing OpenAI API Client...",
  "log_ap_libs_missing": "Sounddevice or Soundfile library not available. Recording not possible.",
  "log_ap_loading_model": "Loading local Whisper model '{model_name}'... (May take time)",
  "log_ap_local_transcription_result": "Local transcription result: '{text}'",
  "log_ap_local_transcription_start": "Starting local transcription (Length: {length}s, Options: {options})",
  "log_ap_model_already_loaded": "Local model '{model_name}' is already loaded.",
  "log_ap_model_load_error": "Error loading local Whisper model {model_name}",
  "log_ap_model_load_error_details": "Model loading error: {error}\\nCheck existence/memory/FFmpeg!",
  "log_ap_model_loaded": "Local model '{model_name}' loaded.",
  "log_ap_open_audio_stream": "Opening audio stream from device {device_id}...",
  "log_ap_openai_api_error": "OpenAI API Error: {error}",
  "log_ap_openai_api_error_status": "OpenAI API Error Seg!",
  "log_ap_openai_auth_error": "OpenAI authentication error. Invalid API key?",
  "log_ap_openai_auth_error_during_transcription": "OpenAI authentication error during transcription.",
  "log_ap_openai_auth_error_status": "OpenAI Auth Error Seg!",
  "log_ap_openai_init_error": "Error initializing OpenAI API Client",
  "log_ap_openai_init_error_details": "OpenAI Init Error: {error}\\nCheck Key/Internet.",
  "log_ap_openai_init_error_status": "Error OpenAI API Initialization!",
  "log_ap_openai_initialized": "OpenAI API Client successfully initialized.",
  "log_ap_openai_key_expired": "OpenAI API Key is invalid or expired.",
  "log_ap_openai_key_invalid": "No OpenAI API key provided or loaded.",
  "log_ap_openai_key_invalid_status": "Error: OpenAI API Key invalid!",
  "log_ap_openai_key_missing": "Error: No OpenAI API Key.",
  "log_ap_openai_missing": "Error: OpenAI library missing.",
  "log_ap_openai_ready": "OpenAI API Client ready.",
  "log_ap_openai_transcription_result": "OpenAI API response: '{text}'",
  "log_ap_openai_transcription_start": "Sending to OpenAI API (Model: {model}, Language: {language}, Prompt: {has_prompt}, Length: {length}s)",
  "log_ap_openai_unavailable": "OpenAI mode not available. Install 'openai'.",
  "log_ap_portaudio_error": "PortAudio error during transcription",
  "log_ap_portaudio_stream_error": "PortAudio error in audio stream",
  "log_ap_processing_remainder": "Processing remainder {segment_id} after silence ({mode})...",
  "log_ap_processing_remainder_length": "Processing remainder {segment_id} (Length: {length}s)",
  "log_ap_processing_segment": "Processing segment {segment_id} ({mode})...",
  "log_ap_recording_running": "Recording running ({mode}) - Speak now.",
  "log_ap_remainder_finished": "Segment {segment_id} (remainder) finished ({mode}). Waiting for next speech.",
  "log_ap_remainder_result": "Segment {segment_id} (remainder) result: '{text}'",
  "log_ap_runtime_error": "Runtime error during transcription: {error}",
  "log_ap_runtime_error_status": "Runtime error Seg! ({error})",
  "log_ap_sb_message_sent": "Message sent to Streamer.bot queue: {message}",
  "log_ap_sb_message_sent_remainder": "Message (remainder) to SB queue: {message}",
  "log_ap_sb_queue_error": "Error adding to Streamer.bot queue: {error}",
  "log_ap_sb_queue_error_remainder": "Error adding to SB queue (remainder): {error}",
  "log_ap_sb_queue_full": "Streamer.bot queue is full. Message discarded.",
  "log_ap_sb_queue_full_remainder": "Streamer.bot queue (remainder) is full.",
  "log_ap_segment_finished": "Segment {segment_id} finished ({mode}). Waiting for next speech.",
  "log_ap_segment_length": "Processing segment {segment_id} (Length: {length}s)",
  "log_ap_segment_result": "Segment {segment_id} result (filtered): '{text}'",
  "log_ap_silence_detected": "Silence detected ({seconds}s).",
  "log_ap_speech_detected": "Speech detected.",
  "log_ap_stream_close_error": "Error closing audio stream: {error}",
  "log_ap_stream_stopped": "Audio stream stopped and closed.",
  "log_ap_transcription_error": "Generic transcription error in mode {mode}",
  "log_ap_transcription_error_status": "{api_name} Transcription Error Seg!",
  "log_ap_unknown_mode": "Unknown processing mode requested: {mode}",
  "log_ap_unknown_mode_status": "Error: Unknown mode '{mode}'",
  "log_ap_using_loaded_model": "Using already loaded local model '{model_name}'.",
  "log_ap_using_openai_prompt": "Using OpenAI API Prompt: '{prompt}'",
  "log_ap_vad_chunk_error": "VAD Processor reported an error during chunk processing.",
  "log_ap_vad_error_processor_unavailable": "VAD Error: VAD Processor is enabled but could not be imported or initialized. Stopping worker.",
  "log_ap_vad_import_warning": "VAD Processor could not be imported. VAD functionality disabled.",
  "log_ap_vad_init_error": "VAD Error: Failed to initialize VAD Processor: {error}",
  "log_ap_vad_segment_process": "VAD: Processing segment {segment_id} (Length: {length}s)",
  "log_ap_vad_segment_result": "VAD: Segment {segment_id} result: '{text}'",
  "log_ap_whisper_local_unavailable": "Local mode not available. Install 'openai-whisper'.",
  "log_ap_whisper_missing": "Error: Whisper library missing.",
  "log_ap_worker_ending": "Recording worker terminating.",
  "log_ap_worker_start": "Starting recording worker. Mode: {mode}, Device: {device}, Model: {model}",
  "log_ap_worker_thread_ended": "Recording worker thread fully terminated. Status: {status}",
  "log_ap_worker_unexpected_error": "Unexpected error in recording worker thread",
  "log_app_ended": "GUI main loop has ended.",
  "log_app_exiting": "Execution of main.py script finished.",
  "log_app_started": "Starting WhisperGUI...",
  "log_config_elevenlabs_decrypt_error": "Error decrypting ElevenLabs key: {error}",
  "log_config_elevenlabs_decrypt_failed": "ElevenLabs API key could not be decrypted.",
  "log_config_elevenlabs_decrypted": "ElevenLabs API key successfully decrypted.",
  "log_config_elevenlabs_encrypt_failed": "Failed to encrypt ElevenLabs API key. Will NOT be saved.",
  "log_config_elevenlabs_encrypted": "ElevenLabs API key encrypted for saving.",
  "log_config_elevenlabs_key_found_but_no_decryption": "ElevenLabs API key found in config, but no decryption key provided.",
  "log_config_elevenlabs_no_key": "ElevenLabs API key present but no encryption key. Will NOT be saved.",
  "log_config_fallback_defaults": "Configuration file '{path}' not found. Using default values.",
  "log_config_file_not_found": "Configuration file not found: {path}",
  "log_config_invalid_language": "Invalid language code '{value}' found in config. Falling back to default '{fallback}'.",
  "log_config_invalid_log_level": "Invalid log level '{value}' found in config. Falling back to default '{fallback}'.",
  "log_config_invalid_log_level_save": "Attempted to save invalid log level '{value}'. Falling back to default '{fallback}'.",
  "log_config_loaded": "Configuration successfully loaded and processed.",
  "log_config_loading": "Loading configuration from '{path}'...",
  "log_config_missing_key_save": "Key '{key}' missing in config dictionary to save. Setting to default '{fallback}'.",
  "log_config_openai_decrypt_error": "Error decrypting OpenAI key: {error}",
  "log_config_openai_decrypt_failed": "OpenAI API key could not be decrypted.",
  "log_config_openai_decrypted": "OpenAI API key successfully decrypted.",
  "log_config_openai_encrypt_failed": "Failed to encrypt OpenAI API key. Will NOT be saved.",
  "log_config_openai_encrypted": "OpenAI API key encrypted for saving.",
  "log_config_openai_key_found_but_no_decryption": "OpenAI API key found in config, but no decryption key provided.",
  "log_config_openai_no_key": "OpenAI API key present but no encryption key. Will NOT be saved.",
  "log_config_parse_error": "Error reading or parsing config file '{path}': {error}. Using defaults.",
  "log_config_save_conversion_error": "Error converting numeric values while saving config: {error}.",
  "log_config_save_error": "ERROR saving configuration to '{path}': {error}",
  "log_config_save_unexpected": "Unexpected error while saving configuration",
  "log_config_saved": "Configuration saved successfully.",
  "log_config_saving": "Saving configuration to '{path}'...",
  "log_config_unexpected_error": "Unexpected error while loading configuration. Using defaults.",
  "log_console_handler_error": "ERROR: Could not create console handler: {error}",
  "log_console_level_initialized": "Console log level initialized to: {level}",
  "log_created_directory": "Directory '{path}' created or already exists.",
  "log_failed_directory": "ERROR: Could not create directory '{path}': {error}",
  "log_file_logging_disabled": "File logging is disabled due to an error.",
  "log_gui_application_terminated": "Application terminated.",
  "log_gui_calling_toggle_recording": "Calling self.toggle_recording() from _process_gui_queue...",
  "log_gui_check_button_error": "Unexpected error in _check_record_button_state: {error}",
  "log_gui_clearing_stop_flag": "Clearing stop flag and updating GUI...",
  "log_gui_closing_initiated": "Closing process initiated...",
  "log_gui_config_dir_ensured": "Configuration directory ensured: {config_dir}",
  "log_gui_config_gathering_failed": "Gathering configuration failed.",
  "log_gui_config_save_error_pre_rebuild": "Error saving configuration before language change.",
  "log_gui_config_saved_pre_rebuild": "Configuration successfully saved before language change.",
  "log_gui_console_handler_missing": "Console handler not found, cannot set log level.",
  "log_gui_copy_all_error": "Error copying all text: {error}",
  "log_gui_copy_selection_error": "Error copying selection: {error}",
  "log_gui_create_config_dir_failed": "Could not create configuration directory {config_dir} before saving: {error}",
  "log_gui_creating_widgets": "Creating widgets...",
  "log_gui_current_tab_pre_change": "Current tab before language change: '{name}', mode: '{mode}'",
  "log_gui_destroying_window": "Destroying Tkinter window.",
  "log_gui_error_mic_id_not_found": "Microphone ID not found.",
  "log_gui_exception": "Critical error in the main application loop.",
  "log_gui_external_toggle_command": "External toggle command for recording received (via GUI Queue).",
  "log_gui_fallback_tab_error": "Fallback tab setting failed: {error}",
  "log_gui_file_not_found": "File not found when trying to open: {filepath}",
  "log_gui_filter_add_error": "Error adding to filter list via context menu",
  "log_gui_filter_added_context": "Filter added via context menu: '{text}' to {target_file}",
  "log_gui_filter_write_error": "Error writing to filter file '{target_file}': {error}",
  "log_gui_final_config_gather_error": "Could not gather/save final configuration.",
  "log_gui_final_config_save_error": "Error saving final configuration.",
  "log_gui_final_config_saved": "Final configuration saved.",
  "log_gui_gather_config_failed_pre_rebuild": "Could not gather current UI values to save before language change.",
  "log_gui_gathering_runtime_config": "Gathering runtime configuration...",
  "log_gui_get_tab_failed_pre_change": "Could not get current tab before language change: {error}",
  "log_gui_icon_error": "Error setting icon: {error}",
  "log_gui_icon_not_found": "Icon file '{icon_file}' not found.",
  "log_gui_info_tab_create_error": "Failed to create info tab content: {error}",
  "log_gui_info_tab_created": "Info tab content created using info.create_info_tab.",
  "log_gui_initial_data_loaded": "Initial GUI data loaded.",
  "log_gui_initial_tab_error": "Could not set initial tab '{tab_name}': {error}. Falling back.",
  "log_gui_initial_tab_set": "Initial tab set to: {tab_name}",
  "log_gui_invalid_log_level": "Invalid log level string found: {level}",
  "log_gui_language_change_requested": "Language change requested: {language}",
  "log_gui_language_changing": "Changing language to: {code} ({name})",
  "log_gui_language_code_not_found": "Could not find language code for '{language}'.",
  "log_gui_language_not_found": "Saved language '{language}' not found in SUPPORTED_LANGUAGES. Falling back to default.",
  "log_gui_loading_initial_data": "Loading initial GUI data...",
  "log_gui_log_level_change_requested": "Log level change requested: {level}",
  "log_gui_log_level_not_found": "Saved log level '{level}' -> '{display}' not found in options. Falling back.",
  "log_gui_log_level_set": "Console log level set to {level_str} ({level_name}).",
  "log_gui_log_level_set_error": "Error setting log level for console: {error}",
  "log_gui_log_level_str_not_found": "Could not find log level string for '{level}'.",
  "log_gui_mem_config_updated": "Updated self.config in memory with current UI values.",
  "log_gui_mic_thread_error": "Error in microphone loading thread",
  "log_gui_no_active_recording_thread": "No active recording thread found to terminate.",
  "log_gui_no_output_path": "No output path found in config, using default: {default_path}",
  "log_gui_opening_file": "Attempting to open file '{filepath}' in default editor...",
  "log_gui_os_error_opening_file": "OS error when opening '{filepath}': {error}",
  "log_gui_output_dir_created": "Output directory created (Validate): {output_dir}",
  "log_gui_output_file_selected": "Output file selected: {filepath}",
  "log_gui_preparing_worker_args": "Preparing worker arguments...",
  "log_gui_queue_processing_error": "Error in GUI Queue processing loop",
  "log_gui_recording_active": "Recording active",
  "log_gui_recording_inactive": "Not recording",
  "log_gui_recording_thread_terminated": "Recording thread successfully terminated.",
  "log_gui_recording_thread_timeout": "Recording thread did not terminate after 2s.",
  "log_gui_replacement_added_context": "New replacement added via context menu: '{pattern}' -> '{replacement}'",
  "log_gui_restore_tab_failed": "Could not restore active tab '{mode}': {error}. Defaulting to first tab.",
  "log_gui_runtime_config_error": "Error gathering runtime configuration: {error}",
  "log_gui_save_config_pre_rebuild": "Saving configuration before rebuilding UI due to language change.",
  "log_gui_saving_final_config": "Saving final configuration...",
  "log_gui_sending_sb_stop_signal": "Sending Stop signal to Streamer.bot Client...",
  "log_gui_sending_ws_stop_signal": "Sending Stop signal to WebSocket Server...",
  "log_gui_setting_stop_flag": "Setting stop_recording_flag...",
  "log_gui_setup_window": "Setting up main window...",
  "log_gui_start_conditions_failed": "Start conditions not met.",
  "log_gui_starting_background_tasks": "Starting background tasks...",
  "log_gui_starting_recording": "Starting recording...",
  "log_gui_starting_worker_thread": "Starting recording_worker thread (Mode: {mode})...",
  "log_gui_status": "GUI Status: {message}",
  "log_gui_status_label_update_error": "Status label could not be updated (window closed?).",
  "log_gui_stop_requested": "Stop requested.",
  "log_gui_stopping_background_threads": "Stopping background threads...",
  "log_gui_stopping_recording": "Stopping recording...",
  "log_gui_streamerbot_checkbox_changed": "Streamer.bot Client Checkbox changed: {state}",
  "log_gui_tab_mapping_created": "Initial Tab Name to Mode Map created: {mapping}",
  "log_gui_tab_mode_not_found": "Could not find internal mode for tab name '{tab_name}' in fixed map. Falling back to 'local'.",
  "log_gui_tab_names_update_warning": "Tab names cannot be updated directly after initialization.",
  "log_gui_tab_restored": "Restored active tab to: '{name}' (mode: '{mode}')",
  "log_gui_textbox_clear_error": "Error clearing textbox",
  "log_gui_tkerror_check_button": "TclError in _check_record_button_state (Shutdown?).",
  "log_gui_toggle_recording_call_finished": "Call to self.toggle_recording() from _process_gui_queue finished.",
  "log_gui_toggle_recording_called": "toggle_recording called. Current status: {status}",
  "log_gui_ui_texts_updated": "UI texts updated.",
  "log_gui_unknown_error_opening_file": "Unknown error when opening '{filepath}'",
  "log_gui_unknown_message_type": "Unknown message type in GUI Queue: {type}",
  "log_gui_updating_ui_texts": "Updating UI texts...",
  "log_gui_validating_start_conditions": "Validating start conditions...",
  "log_gui_waiting_before_destroy": "Waiting briefly...",
  "log_gui_waiting_for_recording_thread": "Waiting for recording thread to terminate (max 2s)...",
  "log_gui_websocket_checkbox_changed": "WebSocket Server Checkbox changed: {state}",
  "log_gui_widgets_created": "Widgets created.",
  "log_gui_window_setup_complete": "Main window setup complete.",
  "log_gui_worker_args_error": "Error with worker arguments: {error}",
  "log_gui_worker_finished": "Recording worker signaled 'finished'.",
  "log_gui_worker_preparation": "Preparation for worker: output_file='{output_file}'",
  "log_gui_worker_thread_started": "recording_worker thread started.",
  "log_gui_ws_loop_not_found": "Could not find Loop for WebSocket Stop-Event or it is no longer running. Trying direct setting.",
  "log_gui_ws_stop_event_error": "Error setting WebSocket Stop Event: {error}",
  "log_gui_ws_stop_event_set_via_loop": "Stop event for WebSocket Server set via call_soon_threadsafe.",
  "log_info_label_update_error": "Error updating release status label from thread: {error}",
  "log_info_link_open_error": "Could not open link {url}: {error}",
  "log_info_link_opened": "Opened link: {url}",
  "log_info_main_script_path": "Running from source (main script), base path: {path}",
  "log_info_packaging_missing": "Python 'packaging' library not found, using simple string comparison for versions.",
  "log_info_pyinstaller_path": "Running in PyInstaller bundle, base path: {path}",
  "log_info_release_check_start": "Checking for new release at {url}",
  "log_info_release_latest": "Application is up to date. Current version: {current}",
  "log_info_release_newer": "Newer release found: {latest}",
  "log_info_release_request_error": "Error checking GitHub release (RequestException): {error}",
  "log_info_release_timeout": "Timeout checking GitHub release at {url}",
  "log_info_release_unexpected_error": "Unexpected error checking GitHub release: {error}",
  "log_info_release_versions": "Latest release version: {latest}, Current version: {current}",
  "log_info_source_path": "Running from source, base path derived from info.py: {path}",
  "log_info_source_path_fallback": "Running from source (fallback path from info.py), base path: {path}, Error accessing main: {error}",
  "log_info_version_parse_error": "Could not parse versions for comparison using 'packaging': {error}. Using string comparison.",
  "log_key_missing": "CRITICAL ERROR: Failed to load or generate encryption key.",
  "log_lang_default_loaded": "Default language '{code}' loaded successfully.",
  "log_lang_default_missing": "Default language file '{path}' also not found! UI texts may be missing.",
  "log_lang_file_missing": "Language file '{path}' not found.",
  "log_lang_format_error": "String formatting error for key '{key}': {error}. Original text: '{text}'",
  "log_lang_format_missing": "Missing formatting placeholder '{e}' in string for key '{key}' (language: {code}).",
  "log_lang_key_not_string": "Value for key '{key}' in language '{code}' is not a string: {text}",
  "log_lang_loaded": "Language '{code}' loaded successfully.",
  "log_lang_loading": "Loading language file: {path}",
  "log_lang_not_supported": "Language code '{code}' is not supported. Falling back to '{fallback}'.",
  "log_lang_parse_error": "Error loading/parsing language file '{path}': {error}",
  "log_level_critical": "Critical",
  "log_level_debug": "Debug",
  "log_level_error": "Error",
  "log_level_info": "Info",
  "log_level_warning": "Warning",
  "log_logfile_clear_error": "Error clearing log file '{path}': {error}",
  "log_logfile_clear_unexpected": "Unexpected error while clearing log file '{path}'",
  "log_logfile_cleared": "Log file '{path}' was cleared due to configuration.",
  "log_logfile_created": "Log file: {path}",
  "log_logfile_no_handler": "Could not clear log file: No file handler found.",
  "log_logfile_not_found": "Log file '{path}' not found for clearing.",
  "log_logfile_open_error": "ERROR: Could not open log file '{path}': {error}",
  "log_sb_cancelled": "Streamer.bot client wait cancelled.",
  "log_sb_connected": "Connected to Streamer.bot WebSocket: {url}",
  "log_sb_connecting": "Trying to connect to Streamer.bot: {url}",
  "log_sb_connection_close_error": "Error closing Streamer.bot connection: {error}",
  "log_sb_connection_closed": "Streamer.bot WebSocket connection closed/reset: {error}",
  "log_sb_connection_closed_explicit": "Streamer.bot WebSocket connection explicitly closed.",
  "log_sb_connection_refused": "Streamer.bot WebSocket connection refused: {url}",
  "log_sb_connection_timeout": "Streamer.bot connection attempt timeout (>10s): {url}",
  "log_sb_invalid_url": "Invalid Streamer.bot WebSocket URL: {url}",
  "log_sb_lib_missing": "WebSocket library not available. Streamer.bot client cannot start.",
  "log_sb_loop_already_closed": "Streamer.bot client event loop was already closed.",
  "log_sb_loop_already_shutdown": "Streamer.bot loop already shut down.",
  "log_sb_loop_cancel_error": "Error cleaning up asyncio tasks in SB client thread: {error}",
  "log_sb_loop_cleanup": "Streamer.bot client loop ended. Cleaning up...",
  "log_sb_loop_closed": "Streamer.bot client event loop closed.",
  "log_sb_loop_exception": "Error during Streamer.bot client loop execution in thread",
  "log_sb_loop_runtime_error": "Runtime error cleaning up asyncio tasks in SB client thread: {error}",
  "log_sb_message_sent": "Message sent to Streamer.bot: {msg_preview}...",
  "log_sb_ping_error": "Error during Streamer.bot ping: {error}",
  "log_sb_ping_failed": "Streamer.bot connection check failed.",
  "log_sb_retry_delay": "Waiting {seconds} seconds before retrying connection to Streamer.bot...",
  "log_sb_send_closed": "Streamer.bot WebSocket closed while sending.",
  "log_sb_send_error": "Error sending to Streamer.bot: {error}",
  "log_sb_send_failed": "Message could not be sent: {msg_preview}...",
  "log_sb_task_ended": "Streamer.bot WebSocket client task ended.",
  "log_sb_thread_done": "Streamer.bot client thread fully terminated.",
  "log_sb_thread_starting": "Starting Streamer.bot client thread for URL: {url}...",
  "log_sb_unexpected_exception": "Unexpected error in Streamer.bot WebSocket client",
  "log_tp_filter_applied": "Filter result: '{result}'",
  "log_tp_filter_create_error": "Could not create default filter file '{filter_path}': {error}",
  "log_tp_filter_default_created": "Default filter file '{filter_path}' created.",
  "log_tp_filter_empty_created": "Empty filter file '{filter_path}' created (no defaults for this type).",
  "log_tp_filter_file_not_found": "Filter file '{filter_path}' not found. Creating file with default patterns (if available)...",
  "log_tp_filter_invalid_line": "Invalid regex in '{filter_path}' line {line}: '{pattern}' - {error}. Ignoring.",
  "log_tp_filter_invalid_regex": "Invalid default regex '{pattern}': {error}",
  "log_tp_filter_load_unexpected": "Unexpected error loading filter file '{filter_path}'",
  "log_tp_filter_loaded": "{count} filter patterns loaded from '{filename}'.",
  "log_tp_filter_loading": "Loading filter patterns from '{filter_path}'...",
  "log_tp_filter_read_error": "Could not read filter file '{filter_path}': {error}. No filters active for this type.",
  "log_tp_replacements_applied": "Replacements applied. Result: '{result}'",
  "log_tp_replacements_create_error": "Could not create example replacements file '{filename}': {error}",
  "log_tp_replacements_created": "Example replacements file '{filename}' created.",
  "log_tp_replacements_file_not_found": "Replacements file '{filename}' not found. Creating example file...",
  "log_tp_replacements_invalid_format": "Content of '{filename}' is not a valid JSON object (dictionary expected).",
  "log_tp_replacements_load_unexpected": "Unexpected error loading replacements from '{filename}'",
  "log_tp_replacements_loaded": "{count} replacement rules loaded from '{filename}'.",
  "log_tp_replacements_loading": "Loading replacements from '{filename}'...",
  "log_tp_replacements_merge_error": "Existing file '{filename}' contains invalid dictionary. Will be overwritten.",
  "log_tp_replacements_read_error": "Could not read or parse replacements file '{filename}': {error}. No replacements active.",
  "log_tp_replacements_rule_error": "Error applying regex replacement '{pattern}' -> '{replacement}': {error}",
  "log_tp_replacements_save_error": "Could not write replacements file '{filename}': {error}",
  "log_tp_replacements_save_unexpected": "Unexpected error saving replacements",
  "log_tp_replacements_saved": "{count} replacement rules saved to '{filename}'.",
  "log_tp_replacements_saving": "Saving replacements to '{filename}'...",
  "log_tp_replacements_unexpected_error": "Unexpected error during replacement '{pattern}' -> '{replacement}': {error}",
  "log_utils_audio_query_error": "Error accessing audio devices: {error}",
  "log_utils_audio_query_failed": "ERROR querying audio devices",
  "log_utils_crypto_missing": "Encryption library (cryptography) not loaded. Key operations not possible.",
  "log_utils_crypto_missing_short": "Cryptography missing!",
  "log_utils_decrypt_error": "Decryption error: {error}",
  "log_utils_decrypt_failed_crypto": "Decryption failed: Cryptography not loaded.",
  "log_utils_decrypt_invalid_token": "Decryption failed: Invalid token (wrong key or corrupt data?).",
  "log_utils_decrypt_skipped": "Decryption skipped: No key or data provided.",
  "log_utils_default_device_error": "Could not determine default input device: {error}",
  "log_utils_default_device_found": "Default input device found: Index {index} - {name}",
  "log_utils_device_count": "Total number of devices found: {count}",
  "log_utils_encrypt_error": "Encryption error: {error}",
  "log_utils_encrypt_failed_crypto": "Encryption failed: Cryptography not loaded.",
  "log_utils_encrypt_skipped": "Encryption skipped: No key or data provided.",
  "log_utils_ffmpeg_found": "FFMPEG executable found at: {path}",
  "log_utils_ffmpeg_not_found": "FFMPEG executable not found in PATH.",
  "log_utils_hostapi_check_failed": "Host API check failed for device {index}: {error}",
  "log_utils_invalid_hostapi_info": "Device {index} ({name}) has no valid host API info.",
  "log_utils_key_generating": "Generating new encryption key...",
  "log_utils_key_important_notice": "!! IMPORTANT: Keep the file '{path}' safe !!\n   Without it, the API key cannot be decrypted.\n   Do NOT commit this file to Git or public repositories.",
  "log_utils_key_invalid": "Content of '{path}' appears invalid (length/format). Generating new key.",
  "log_utils_key_loaded": "Encryption key loaded from '{path}'.",
  "log_utils_key_read_error": "Error reading key from '{path}': {error}",
  "log_utils_key_saved": "New key saved to '{path}'.",
  "log_utils_key_write_error": "Failed to save key to '{path}': {error}",
  "log_utils_key_write_error_short": "Key file not writable: {error}. API key security compromised!",
  "log_utils_no_default_device": "No explicit default input device reported.",
  "log_utils_no_input_devices": "No suitable microphones found.",
  "log_utils_searching_devices": "Searching for audio input devices...",
  "log_utils_skipped_device": "  -> Skipped input device (host API): ID {index}: {name}",
  "log_utils_skipping_mme": "Device {index} ({name}) uses MME Host API - skipping.",
  "log_utils_sounddevice_missing": "Sounddevice library not loaded. Cannot list audio devices.",
  "log_utils_valid_device": "  -> Valid input device: {name}",
  "log_utils_valid_input_count": "Number of valid input devices found: {count}",
  "log_vad_init_details": "VAD Initialized: SR={sr}, ChunkSize={chunk_size}, Threshold={threshold}, MinSilenceFrames={min_silence_frames}, MinSpeechFrames={min_speech_frames}",
  "log_vad_init_failed": "VAD Processor: Failed to initialize Silero VAD Lite: {error}",
  "log_vad_initialized": "VAD Processor: Silero VAD Lite model initialized.",
  "log_vad_process_error_not_init": "VAD Processor: Cannot process chunk, VAD model not initialized.",
  "log_vad_processing_error": "VAD Processor: Error processing VAD chunk: {error}",
  "log_vad_resetting": "VAD Processor: Resetting state.",
  "log_vad_speech_ended": "VAD Processor: SPEECH ENDED (Silence: {silence_frames}/{min_silence} frames)",
  "log_vad_speech_started": "VAD Processor: SPEECH STARTED",
  "log_ws_client_connected": "WebSocket client connected: {addr}",
  "log_ws_client_disconnected_error": "Client {addr} disconnected with error: {error}",
  "log_ws_client_disconnected_ok": "Client {addr} closed the connection normally.",
  "log_ws_command_toggle": "WebSocket command: TOGGLE_RECORD detected ‚Äì forwarding to GUI.",
  "log_ws_command_unknown": "Unknown command '{cmd}' received from {addr}.",
  "log_ws_connection_closed": "WebSocket connection closed: {addr}",
  "log_ws_error_only_text": "ERROR: Only text messages are supported.",
  "log_ws_error_unknown_command": "ERROR: Unknown command '{cmd}'.",
  "log_ws_handler_exception": "Unexpected error in WebSocket handler ({addr})",
  "log_ws_invalid_port": "Invalid WebSocket port: {port}",
  "log_ws_lib_missing": "WebSocket library not available. Server failed to start.",
  "log_ws_loop_already_closed": "WebSocket loop was already closed.",
  "log_ws_loop_already_shutdown": "Loop already shut down, no tasks to cancel.",
  "log_ws_loop_cancel_error": "Error while cancelling tasks: {error}",
  "log_ws_loop_cleanup": "Cleaning up WebSocket event loop...",
  "log_ws_loop_closed": "WebSocket event loop closed.",
  "log_ws_loop_exception": "Exception in WebSocket server event loop.",
  "log_ws_loop_runtime_error": "Runtime error during task cancellation: {error}",
  "log_ws_message_received": "Message received from {addr}: {msg}",
  "log_ws_non_text_message": "Non-text message received from {addr}. Only text is supported.",
  "log_ws_port_error": "Error starting WebSocket server on port {port}: {error}",
  "log_ws_port_in_use": "WebSocket port {port} is already in use!",
  "log_ws_server_closed": "WebSocket server connection closed.",
  "log_ws_server_exception": "Unexpected error in WebSocket server.",
  "log_ws_server_started": "WebSocket server started at {host}:{port}",
  "log_ws_server_stopping": "Stopping WebSocket server...",
  "log_ws_server_task_ended": "WebSocket server task ended.",
  "log_ws_thread_done": "WebSocket server thread finished.",
  "log_ws_thread_starting": "Starting WebSocket server thread on port {port}...",
  "placeholder_api_key_elevenlabs": "ElevenLabs Key...",
  "placeholder_api_key_openai": "sk-...",
  "placeholder_integration_url": "ws://127.0.0.1:8080/",
  "placeholder_language_stt": "e.g., de, en, fr (ISO code)",
  "placeholder_model_id_elevenlabs": "e.g., scribe_v1",
  "placeholder_output_file": "Default: {filename}",
  "radio_format_json": "JSON",
  "radio_format_txt": "TXT",
  "status_all_copied": "All text copied.",
  "status_ap_libs_missing": "Error: Sound libs missing!",
  "status_ap_portaudio_stream_error": "Error: Audio Stream!",
  "status_ap_recording_finished": "Recording finished.",
  "status_ap_sb_queue_error": "Warning: SB Queue Error: {error}",
  "status_ap_sb_queue_full": "Warning: SB Queue full!",
  "status_ap_vad_error_processor_unavailable": "VAD Error: Processor unavailable!",
  "status_ap_vad_init_error": "VAD Init Error: {error}",
  "status_ap_worker_unexpected_end": "Worker unexpectedly ended.",
  "status_ap_worker_unexpected_error": "Error: Unexpected worker error!",
  "status_ap_worker_unexpected_error_details": "Unexpected error: {error}\n(Details in logfile)",
  "status_checking_release": "Checking for updates...",
  "status_closing": "Stopping recording before closing...",
  "status_disabled": "Disabled",
  "status_empty_selection": "Empty selection ignored.",
  "status_enabled": "Enabled",
  "status_error_api_key_elevenlabs": "Error: ElevenLabs API Key missing!",
  "status_error_api_key_openai": "Error: OpenAI API Key missing!",
  "status_error_clearing_output": "Error clearing display.",
  "status_error_config_dir_create": "Error creating config directory.",
  "status_error_copy": "Error copying text.",
  "status_error_file_not_found": "Error: File '{filename}' not found.",
  "status_error_filter_not_found": "Error: Filter file '{filename}' could not be created/found.",
  "status_error_generic": "Error: {error}",
  "status_error_invalid_input": "Invalid input: {error}",
  "status_error_key_unwritable": "Key file not writable: {error}. API Key insecure!",
  "status_error_mic_select_fail": "Error: Please select a valid microphone!",
  "status_error_model_id_elevenlabs": "Error: ElevenLabs Model ID missing!",
  "status_error_numeric_buffer": "Error: Invalid number for buffer/silence.",
  "status_error_opening_file": "Error opening file: {error}",
  "status_error_output_dir_create": "Error creating output dir: {error}",
  "status_error_output_dir_write": "Error: No write access for output path.",
  "status_error_portaudio": "Audio Stream Error!",
  "status_error_portaudio_details": "PortAudio Error: {error}. Recording stopped.",
  "status_error_reading_settings": "Error reading settings: {error}",
  "status_error_replacements_not_found": "Error: Replacements file could not be created/found.",
  "status_error_saving_config": "Error saving config: {error}",
  "status_error_saving_filter": "Error saving filter: {error}",
  "status_error_saving_key": "Error saving key: {e}. API Key insecure!",
  "status_error_saving_replacements": "Error saving replacement for '{text}...'.",
  "status_error_sb_client_task": "SB WS Client Error: {error}",
  "status_error_sb_url_invalid": "Invalid SB URL: {url}",
  "status_error_unexpected_worker": "Unexpected error in worker!",
  "status_error_ws_lib_missing": "WebSocket Lib missing!",
  "status_error_ws_other": "WebSocket Port {port} Error: {error}",
  "status_error_ws_port_busy": "WebSocket Port {port} busy!",
  "status_error_ws_port_invalid": "Invalid WS Port: {port}",
  "status_error_ws_server_task": "WebSocket Server Error: {error}",
  "status_filter_added": "Added '{text}...' to filter list ({filename}).",
  "status_latest_release": "You are using the latest version ({current_version}).",
  "status_log_level_set": "Console log level set to: {log_level}",
  "status_mic_invalid": "Invalid microphone selection.",
  "status_mic_search": "Searching for microphones...",
  "status_mic_selected": "Microphone '{mic_name}' selected.",
  "status_mics_error": "Error loading microphones!",
  "status_mics_loaded_error": "Microphones loaded, but selection error.",
  "status_mics_loaded_selected": "Microphones loaded. Microphone selected.",
  "status_mics_none": "No microphones found!",
  "status_new_release_available": "Update available: Version {latest_version}!",
  "status_no_selection": "No selection made.",
  "status_opened_editor": "'{filename}' opened for editing.",
  "status_opening_editor": "Opening '{filename}' in editor...",
  "status_output_cleared": "Display cleared.",
  "status_output_file_selected": "Output file: {filename}",
  "status_ready": "Ready.",
  "status_ready_sb_disabled": " (SB Sending disabled)",
  "status_ready_ws_disabled": "Ready (WS Server disabled).",
  "status_recording_finished": "Recording finished.",
  "status_release_check_error": "Error checking for updates: {error}",
  "status_replacement_added": "Replacement for '{text}...' saved.",
  "status_replacement_exists": "Info: Replacement for '{text}...' already exists.",
  "status_sb_client_connected": "Connected to Streamer.bot",
  "status_sb_client_starting": "Starting Streamer.bot Client for {url}...",
  "status_sb_client_stopped": "Streamer.bot Client stopped.",
  "status_sb_client_waiting": "Waiting for Streamer.bot...",
  "status_sb_warn_disconnected": "SB connection closed.",
  "status_sb_warn_queue_full": "SB Queue full!",
  "status_sb_warn_refused": "SB WS connection refused.",
  "status_sb_warn_send_error": "Error sending to SB: {error}",
  "status_sb_warn_timeout": "SB WS connection timeout.",
  "status_selection_copied": "Selection copied.",
  "status_starting_recording": "Starting recording...",
  "status_stopping_recording": "Stopping recording...",
  "status_theme_changed_restart": "Theme changed. App restart may be needed.",
  "status_vad_mode_active": "VAD Mode Active",
  "status_vad_processing": "Processing VAD Segment {segment_id}...",
  "status_worker_unexpected_end": "Worker finished unexpectedly.",
  "status_ws_server_running": "WebSocket Server running on port {port}",
  "status_ws_server_starting": "Starting WebSocket Server on port {port}...",
  "status_ws_server_stopped": "WebSocket Server stopped.",
  "tab_elevenlabs": "ElevenLabs API",
  "tab_info": "Info",
  "tab_integration": "Integration (SB)",
  "tab_local": "Local",
  "tab_openai": "OpenAI API",
  "tab_websocket": "WebSocket"
}
